---
heat_template_version: 2016-10-14

description:
  An instance for a infra nodes server
  The instances are created with Heat and then configured with Ansible

parameters:

  service_network:
    description: >
      The name or ID of the internal network
    type: string
    constraints:
    - custom_constraint: neutron.network

  service_subnet:
    description: >
      The name or ID of the internal IPv4 space
    type: string
    constraints:
    - custom_constraint: neutron.subnet

  cluster_network:
    description: >
      The name or ID of the cluster network
    type: string
    constraints:
    - custom_constraint: neutron.network

  cluster_subnet:
    description: >
      The name or ID of the cluster IPv4 space
    type: string
    constraints:
    - custom_constraint: neutron.subnet

  hostname:
    description: >
      The Infrastructure hostname portion of the FQDN
    type: string
    default: "infra"
    constraints:
    - allowed_pattern: '[a-z0-9\-]*'
      description: Hostname must contain only characters [a-z0-9\-].

  domain_name:
    description: >
      All VMs will be placed in this domain
    type: string

  image:
    description: >
      The Glance image to use as a base for DNS servers
    type: string
    constraints:
    - custom_constraint: glance.image

  flavor:
    description: >
      The name of the OpenStack instance flavor to use for DNS servers
    type: string
    default: m1.small
    constraints:
    - custom_constraint: nova.flavor

  key_name:
    type: string
    description: Name of the SSH keypair registered with Nova
    constraints:
    - custom_constraint: nova.keypair

  external_network:
    type: string
    description: >
      The external network that provides floating IP addresses for the nodes
    constraints:
    - custom_constraint: neutron.network

  dns_nameservers:
    type: comma_delimited_list
    description: Addresses of a dns nameserver reachable in your environment

  docker_volume_size:
    description: >
      size of a cinder volume in GB to allocate to docker for container/image
      storage
    type: number
    default: 25

  bastion_keypair:
    description: >
      Bastion public keypair
    type: string

  security_group:
    description: >
      ID or name for security group
    type: string

resources:

  service_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: service_network}
      security_groups:
        - default
        - { get_param: security_group }
      fixed_ips:
        - subnet_id: {get_param: service_subnet}

  cluster_port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: cluster_network}
      security_groups:
        - default
        - { get_param: security_group }
      fixed_ips:
        - subnet_id: {get_param: cluster_subnet}

  host:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: "HOST.DOMAIN"
          params:
            HOST: {get_param: hostname}
            DOMAIN: {get_param: domain_name}
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      networks:
        - port: {get_resource: service_port}
        - port: {get_resource: cluster_port}
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_resource: init}

  floating_ip:
      type: OS::Nova::FloatingIP
      properties:
        pool: {get_param: external_network}

  association:
      type: OS::Nova::FloatingIPAssociation
      properties:
        floating_ip: { get_resource: floating_ip }
        server_id: { get_resource: host }

  docker_volume:
    type: OS::Cinder::Volume
    properties:
      name:
        str_replace:
          template: "volume-HOST"
          params:
            HOST: {get_param: hostname}
      size: {get_param: docker_volume_size}

  docker_volume_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: {get_resource: host}
      volume_id: {get_resource: docker_volume}

  init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: set_hostname}
      - config: {get_resource: included_files}

  # we need to include the bastion ssh key created during the installation
  included_files:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        ssh_authorized_keys:
        - {get_param: bastion_keypair}

  # force to set the hostname
  set_hostname:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        hostname: {get_param: hostname}
        fqdn:
          str_replace:
            template: "HOST.DOMAIN"
            params:
              HOST: {get_param: hostname}
              DOMAIN: {get_param: domain_name}

outputs:
  infra_hostname:
    value: {get_param: hostname}

  infra_floating_ip:
    description: Floating IP used by infra node server
    value: {get_attr: [floating_ip, ip]}

  infra_service_ip:
    description: Internal IP on service network used by infra node server
    value: {get_attr: [host, first_address]}

  infra_cluster_ip:
    description: Internal IP on service network used by infra node server
    value:
      - {get_attr: [cluster_port, fixed_ips]}

